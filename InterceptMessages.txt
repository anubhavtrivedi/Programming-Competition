import java.io.*;
import java.util.*;

public class GFG {
	static int[] b;

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n, m, ans = 0;
		n = in.nextInt();
		m = in.nextInt();
		int[] f1 = new int[n];
		int[] f2 = new int[m];
		for (int i = 0; i < n; i++) {
			f1[i] = in.nextInt();
		}
		for (int i = 0; i < m; i++) {
			f2[i] = in.nextInt();
		}
		int fl1 = 0, fl2 = 0, sum1 = 0, sum2 = 0;
		sum1 = f1[fl1];
		sum2 = f2[fl2];

		while (fl1 < n - 1 && fl2 < m - 1) {
			if (sum1 == sum2) {
				ans++;
				fl1++;
				fl2++;
				sum1 = f1[fl1];
				sum2 = f2[fl2];
				continue;
			}
			if (sum1 < sum2) {
				fl1++;
				sum1 += f1[fl1];
				continue;
			}
			if (sum1 > sum2) {
				fl2++;
				sum2 += f2[fl2];
			}
		}
		ans++;
		System.out.println(ans);
	}

	void merge(int arr[], int l, int m, int r) {
		// Find sizes of two subarrays to be merged
		int n1 = m - l + 1;
		int n2 = r - m;

		/* Create temp arrays */
		int L[] = new int[n1];
		int R[] = new int[n2];

		/* Copy data to temp arrays */
		for (int i = 0; i < n1; ++i)
			L[i] = arr[l + i];
		for (int j = 0; j < n2; ++j)
			R[j] = arr[m + 1 + j];

		/* Merge the temp arrays */

		// Initial indexes of first and second subarrays
		int i = 0, j = 0;

		// Initial index of merged subarry array
		int k = l;
		while (i < n1 && j < n2) {
			if (L[i] <= R[j]) {
				arr[k] = L[i];
				i++;
			} else {
				arr[k] = R[j];
				j++;
			}
			k++;
		}

		/* Copy remaining elements of L[] if any */
		while (i < n1) {
			arr[k] = L[i];
			i++;
			k++;
		}

		/* Copy remaining elements of R[] if any */
		while (j < n2) {
			arr[k] = R[j];
			j++;
			k++;
		}
	}

	// Main function that sorts arr[l..r] using
	// merge()
	void sort(int arr[], int l, int r) {
		if (l < r) {
			// Find the middle point
			int m = (l + r) / 2;

			// Sort first and second halves
			sort(arr, l, m);
			sort(arr, m + 1, r);

			// Merge the sorted halves
			merge(arr, l, m, r);
		}

	}
}
