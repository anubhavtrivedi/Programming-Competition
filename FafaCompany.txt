import java.io.*;
import java.util.*;

public class GFG {
	static int[] b;

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n, ans = 0;
		double temp = 1.0, temp1 = 1;
		n = in.nextInt();
		for (double i = 1; i <= n / 2; i++) {
			temp = (n - i) / i;
			if (temp % 1 == 0) {
				ans++;
			}
		}

		System.out.println(ans);
	}

	public static int[][] mergeSort(int[][] a0, int n) {
		int n0, i, j, ind = 0, top;
		if (n == 1)
			return a0;
		n0 = (n / 2);
		int[][] a = new int[2][n0];
		int[][] b = new int[2][n - n0];
		top = 0;
		// divide step
		for (int i1 = 0; i1 < n; i1++) {
			if (ind < n0) {
				a[0][ind] = a0[0][i1];
				a[1][ind] = a0[1][i1];
				ind++;
				// System.out.print("arr1"+a0[i1]+" ");
			} else {// System.out.print("arr2"+a0[i1]+" ");
				b[0][top] = a0[0][i1];
				b[1][top] = a0[1][i1];
				top++;
			}
		}
		ind = 0;
		a = mergeSort(a, n0);
		b = mergeSort(b, n - n0);
		// conqure
		i = 0;
		j = 0;
		while (i < n0 && j < top) {
			if (a[0][i] == b[0][j]) {
				if (a[1][i] > b[1][j]) {
					a0[1][ind] = b[1][j];
					a0[0][ind] = b[0][j];
					ind++;
					j++;
				} else {
					a0[1][ind] = a[1][i];
					a0[0][ind] = a[0][i];
					ind++;
					i++;
				}
				continue;
			}
			if (a[0][i] < b[0][j]) {
				a0[1][ind] = b[1][j];
				a0[0][ind] = b[0][j];
				ind++;
				j++;
			} else {
				a0[1][ind] = a[1][i];
				a0[0][ind] = a[0][i];
				ind++;
				i++;
			}
		}
		while (i < n0) {
			a0[1][ind] = a[1][i];
			a0[0][ind] = a[0][i];
			i++;
			ind++;
		}
		while (j < top) {
			a0[1][ind] = b[1][j];
			a0[0][ind] = b[0][j];
			j++;
			ind++;
		}
		return a0;
	}

}
